openapi: 3.0.0
info:
  title: Swagger Freshdesk API V2 - OpenAPI 3.0
  description: |-
    Freshdesk is a cloud-based customer support platform that was founded with the mission of enabling companies of all sizes to provide great customer service.

    Our goal is simple: make it easy for brands to talk to their customers and make it easy for users to get in touch with businesses.

    Freshdesk's APIs belong to the Representational State Transfer (REST) category.

    They allow you to perform 'RESTful' operations such as reading, modifying, adding or deleting data from your helpdesk.

    The APIs also support Cross-Origin Resource Sharing (CORS).
  version: 0.0.1
externalDocs:
  description: API V2 Documentation
  url: https://developers.freshdesk.com/api/#introduction
servers:
- url: https://ccl-consulting.freshdesk.com/api/v2
  description: Production server
security:
- basicAuth: []
tags:
- name: Tickets
  description: A ticket is an issue raised by a requester that need to be solved
- name: Ticket Fields
  description: The custom and default ticket fields in Freshdesk have the following
    properties.
- name: Ticket Forms
  description: Ticket forms allow you to show the right form to your customers depending
    on what they want to contact you about
- name: Ticket Conversations
  description: Ticket conversations are the messages that are exchanged between the
    requester and the agent
- name: Account
  description: See or export account information
- name: Jobs
  description: No Documentation
- name: Contacts
  description: Contacts are the people who are associated with a company
- name: Contacts Fields
  description: The custom and default contact fields in Freshdesk have the following
    properties.
- name: Agents
  description: Agents are the people who are responsible for solving tickets
- name: Skills
  description: |-
    Skills allow you to easily match tickets to the right agents.
    You can associate distinct skills to each agent and create rules to make sure that only tickets matching those skills are assigned to them.
- name: Roles
  description: Roles are the permissions that are assigned to agents
- name: Groups
  description: Groups are the teams that your agents belong to
- name: Admin-Groups
  description: Admin groups are the teams that your agents belong to
- name: Companies
  description: Companies are the organizations that your customers belong to
- name: Companies Fields
  description: The custom and default company fields in Freshdesk have the following
    properties.
- name: Custom Objects
  description: Custom objects are the custom entities that you can create in Freshdesk
- name: Canned Responses
  description: Canned responses are the pre-defined responses that can be used to
    quickly respond to tickets
- name: Discussions
  description: Discussions are the comments that are added to tickets
- name: Solutions
  description: Solutions are the articles that are published in the knowledge base
- name: Surveys
  description: Surveys are the feedback forms that are sent to customers after a ticket
    is resolved
- name: Satisfaction Ratings
  description: Satisfaction ratings are the feedback that customers provide after
    a ticket is resolved
- name: Field Service Management
  description: Field Service Management is a feature that allows you to manage field
    service agents and their schedules
- name: Time Entries
  description: Time entries are the time spent by agents on tickets
- name: Email Configs
  description: Email configurations are the email addresses that are used to receive
    emails
- name: Email Mailboxes
  description: Email mailboxes are the email addresses that are used to receive emails
- name: Products
  description: Products are the items that you sell to your customers
- name: Business Hours
  description: Business hours are the time slots during which your agents are available
    to solve tickets
- name: Scenario Based Automation
  description: Scenario based automation allows you to automate your helpdesk by creating
    rules that trigger actions when certain conditions are met
- name: SLA Policies
  description: SLA policies are the rules that define the response time and resolution
    time for tickets
- name: Omnichannel Activities
  description: Omnichannel activities are the activities that are performed by agents
    on the omnichannel dashboard
- name: Automations
  description: Automations are the rules that are used to automate your helpdesk
- name: Settings
  description: Settings are the configuration options that are used to customize your
    helpdesk
paths:
  /tickets:
    get:
      tags:
      - Tickets
      summary: List all tickets
      description: List all tickets
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tickets'
      security:
      - basicAuth: []
  /ticket_fields:
    get:
      tags:
      - Ticket Fields
      summary: List all ticket fields
      description: list all ticket fields
      responses:
        "200":
          description: OK
      security:
      - basicAuth: []
  /ticket-forms:
    get:
      tags:
      - Ticket Forms
      summary: List all ticket forms
      description: |-
        List all ticket forms
        Be carefull: "The Multiple Ticket Forms feature(s) is/are not supported in your plan. Please upgrade your account to use it."
      responses:
        "200":
          description: OK
      security:
      - basicAuth: []
  /conversations/{id}:
    delete:
      tags:
      - Ticket Conversations
      summary: Delete a conversation
      description: Delete a conversation
      parameters:
      - name: id
        in: path
        description: Provide ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 42
      responses:
        "204":
          description: "HTTP Status: 204 No Content"
      security:
      - basicAuth: []
  /contacts:
    get:
      tags:
      - Contacts
      summary: List all contacts
      description: List all contacts on your freshdesk domain.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
  /contacts/{id}:
    delete:
      tags:
      - Contacts
      summary: Soft Delete a Contact
      description: Soft Delete a Contact
      parameters:
      - name: id
        in: path
        description: Provide ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 42
      responses:
        "200":
          description: "HTTP Status: 204 No Content"
  /contacts/{id}/hard_delete:
    delete:
      tags:
      - Contacts
      summary: Permanently Delete a Contact
      description: Permanently Delete a Contact
      parameters:
      - name: id
        in: path
        description: Provide ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 42
      responses:
        "200":
          description: "HTTP Status: 204 No Content"
  /contact_fields:
    get:
      tags:
      - Contacts Fields
      summary: List all contacts fields
      description: List all contacts fields
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
      security:
      - basicAuth: []
  /contact_field/{id}:
    delete:
      tags:
      - Contacts Fields
      summary: Delete a contact field
      description: Delete a contact field
      parameters:
      - name: id
        in: path
        description: Provide ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 42
      responses:
        "200":
          description: "HTTP Status: 204 No Content"
  /agents:
    get:
      tags:
      - Agents
      summary: View Agents
      description: |-
        View Agents
        "The Skill Based Round Robin feature(s) is/are not supported in your plan. Please upgrade your account to use it."
      responses:
        "200":
          description: OK
      security:
      - basicAuth: []
  /agents/{id}:
    delete:
      tags:
      - Agents
      summary: Delete an Agent
      description: |-
        Delete an Agent
        "The Skill Based Round Robin feature(s) is/are not supported in your plan. Please upgrade your account to use it."
      parameters:
      - name: id
        in: path
        description: Provide ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 42
      responses:
        "204":
          description: "HTTP Status: 204 No Content"
      security:
      - basicAuth: []
  /account:
    get:
      tags:
      - Account
      summary: View Account
      description: View Account informations
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
      security:
      - basicAuth: []
  /jobs/{jobID}:
    get:
      tags:
      - Jobs
      summary: View a job
      description: View a job
      parameters:
      - name: jobID
        in: path
        description: Provide ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 42
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Jobs'
      security:
      - basicAuth: []
  /skills:
    get:
      tags:
      - Skills
      summary: List all skills
      description: List all skills
      responses:
        "200":
          description: OK
      security:
      - basicAuth: []
  /skills/{id}:
    delete:
      tags:
      - Skills
      summary: Delete a Skill
      description: Delete a Skill
      parameters:
      - name: id
        in: path
        description: Provide ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 42
      responses:
        "204":
          description: "HTTP Status: 204 No Content"
      security:
      - basicAuth: []
  /roles/{rolesID}:
    get:
      tags:
      - Roles
      summary: View a role
      description: View a roles
      parameters:
      - name: rolesID
        in: path
        description: Provide ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 42
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Roles'
      security:
      - basicAuth: []
  /roles:
    get:
      tags:
      - Roles
      summary: List all roles
      description: List all roles
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Roles'
      security:
      - basicAuth: []
  /groups:
    get:
      tags:
      - Groups
      summary: List all groups
      description: List all groups
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Groups'
      security:
      - basicAuth: []
    post:
      tags:
      - Groups
      summary: Create a Group
      description: Create a Group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/groups_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Groups'
      security:
      - basicAuth: []
  /groups/{id}:
    get:
      tags:
      - Groups
      summary: View a group
      description: View a group
      parameters:
      - name: id
        in: path
        description: Provide ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 42
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Groups'
      security:
      - basicAuth: []
    put:
      tags:
      - Groups
      summary: Update a group
      description: Update a group
      parameters:
      - name: id
        in: path
        description: Provide ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 42
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/groups_id_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Groups'
      security:
      - basicAuth: []
    delete:
      tags:
      - Groups
      summary: Delete a group
      description: Delete a group
      parameters:
      - name: id
        in: path
        description: Provide ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 42
      responses:
        "204":
          description: "HTTP Status: 204 No Content"
      security:
      - basicAuth: []
  /admin/groups:
    get:
      tags:
      - Admin-Groups
      summary: List all Admin-Groups
      description: List all Admin-Groups
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Admin_Groups'
      security:
      - basicAuth: []
  /admin/groups/{id}:
    delete:
      tags:
      - Admin-Groups
      summary: Delete a group
      description: Delete a group
      parameters:
      - name: id
        in: path
        description: Provide ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 42
      responses:
        "204":
          description: "HTTP Status: 204 No Content"
      security:
      - basicAuth: []
  /companies:
    get:
      tags:
      - Companies
      summary: List all Companies
      description: List all Companies
      responses:
        "200":
          description: OK
      security:
      - basicAuth: []
  /companies/{id}:
    delete:
      tags:
      - Companies
      summary: Delete a company
      description: Delete a company
      parameters:
      - name: id
        in: path
        description: Provide ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 42
      responses:
        "204":
          description: "HTTP Status: 204 No Content"
      security:
      - basicAuth: []
  /company_fields:
    get:
      tags:
      - Companies Fields
      summary: List all Companies Fields
      description: List all Companies Fields
      responses:
        "200":
          description: OK
      security:
      - basicAuth: []
  /company_fields/{id}:
    delete:
      tags:
      - Companies Fields
      summary: Delete a company field
      description: Delete a group
      parameters:
      - name: id
        in: path
        description: Provide ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 42
      responses:
        "204":
          description: "HTTP Status: 204 No Content"
      security:
      - basicAuth: []
  /custom_objects/schemas/schema-id/records/{record-id}:
    delete:
      tags:
      - Custom Objects
      summary: Delete a record
      description: Delete a record
      parameters:
      - name: record-id
        in: path
        description: Provide ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 42
      responses:
        "204":
          description: "HTTP Status: 204 No Content"
      security:
      - basicAuth: []
  /canned_response_folders:
    get:
      tags:
      - Canned Responses
      summary: List All Folders
      description: List All Folders
      responses:
        "200":
          description: OK
      security:
      - basicAuth: []
  /discussions/categories:
    get:
      tags:
      - Discussions
      summary: List All Forum Categories
      description: List All Forum Categories
      responses:
        "200":
          description: OK
      security:
      - basicAuth: []
  /discussions/categories/{id}:
    delete:
      tags:
      - Discussions
      summary: Delete a Discussion Category
      description: Delete a Discussion Category
      parameters:
      - name: id
        in: path
        description: Discussion Category ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 42
      responses:
        "204":
          description: "HTTP Status: 204 No Content"
      security:
      - basicAuth: []
  /discussions/forums/{id}:
    delete:
      tags:
      - Discussions
      summary: Delete a Discussion Forum
      description: Delete a Discussion Forum
      parameters:
      - name: id
        in: path
        description: Discussion Forum ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 42
      responses:
        "204":
          description: "HTTP Status: 204 No Content"
      security:
      - basicAuth: []
  /discussions/forums/{forum_id}/follow:
    delete:
      tags:
      - Discussions
      summary: Unmonitor Forum
      description: Unmonitor Forum
      parameters:
      - name: forum_id
        in: path
        description: Discussion Forum ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 42
      - name: user_id
        in: query
        description: User ID
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          example: 42
      responses:
        "204":
          description: "HTTP Status: 204 No Content"
      security:
      - basicAuth: []
  /discussions/topics/{id}:
    delete:
      tags:
      - Discussions
      summary: Delete a Topic
      description: Delete a Topic
      parameters:
      - name: id
        in: path
        description: Topic ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 42
      responses:
        "204":
          description: "HTTP Status: 204 No Content"
      security:
      - basicAuth: []
  /discussions/topics/{topic_id}/follow:
    delete:
      tags:
      - Discussions
      summary: Unmonitor topic
      description: Unmonitor topic
      parameters:
      - name: topic_id
        in: path
        description: Topic ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 42
      - name: user_id
        in: query
        description: User ID
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          example: 42
      responses:
        "204":
          description: "HTTP Status: 204 No Content"
      security:
      - basicAuth: []
  /discussions/comments/{id}:
    delete:
      tags:
      - Discussions
      summary: Delete a comment
      description: Delete a comment
      parameters:
      - name: id
        in: path
        description: Comment ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 42
      responses:
        "204":
          description: "HTTP Status: 204 No Content"
      security:
      - basicAuth: []
  /solutions/categories:
    get:
      tags:
      - Solutions
      summary: List all Solution Categories
      description: List all Solution Categories
      responses:
        "200":
          description: OK
      security:
      - basicAuth: []
  /solutions/categories/{id}:
    delete:
      tags:
      - Solutions
      summary: Delete a Solution Category
      description: Delete a Solution Category
      parameters:
      - name: id
        in: path
        description: Solution Category ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 42
      responses:
        "204":
          description: "HTTP Status: 204 No Content"
      security:
      - basicAuth: []
  /solutions/folders/{id}:
    delete:
      tags:
      - Solutions
      summary: Delete a Solution Folder
      description: Delete a Solution Folder
      parameters:
      - name: id
        in: path
        description: Solution Folder ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 42
      responses:
        "204":
          description: "HTTP Status: 204 No Content"
      security:
      - basicAuth: []
  /solutions/articles/{id}:
    delete:
      tags:
      - Solutions
      summary: Delete a Solution Article
      description: Delete a Solution Article
      parameters:
      - name: id
        in: path
        description: Solution Article ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 42
      responses:
        "204":
          description: "HTTP Status: 204 No Content"
      security:
      - basicAuth: []
  /surveys:
    get:
      tags:
      - Surveys
      summary: List all Surveys
      description: |-
        List all Surveys
        "message": "The Surveys feature(s) is/are not supported in your plan. Please upgrade your account to use it."
      responses:
        "200":
          description: OK
      security:
      - basicAuth: []
  /surveys/satisfaction_ratings:
    get:
      tags:
      - Satisfaction Ratings
      summary: View all Satisfaction Ratings
      description: |-
        View all Satisfaction Ratings
        "message": "The Surveys feature(s) is/are not supported in your plan. Please upgrade your account to use it."
      responses:
        "200":
          description: OK
      security:
      - basicAuth: []
  /time_entries:
    get:
      tags:
      - Time Entries
      summary: List all Time entries
      description: List all time entrioes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Time_Entries'
      security:
      - basicAuth: []
  /tickets/{ticketID}/time_entries:
    post:
      tags:
      - Time Entries
      summary: Create a Time Entry
      description: Create a Time Entry
      parameters:
      - name: ticketID
        in: path
        description: Provide ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 42
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ticketID_time_entries_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Time_Entries'
      security:
      - basicAuth: []
  /time_entries/{timeID}:
    put:
      tags:
      - Time Entries
      summary: Update a Time Entry
      description: Create a Time Entry
      parameters:
      - name: timeID
        in: path
        description: Provide ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/time_entries_timeID_body'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Time_Entries'
      security:
      - basicAuth: []
    delete:
      tags:
      - Time Entries
      summary: Delete a Time Entry
      description: Create a Time Entry
      parameters:
      - name: timeID
        in: path
        description: Provide ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 2
      responses:
        "204":
          description: "HTTP Status: 204 No Content"
      security:
      - basicAuth: []
  /time_entries/{timeID}/toggle_timer:
    put:
      tags:
      - Time Entries
      summary: Start/Stop Timer
      description: Start/Stop Timer
      parameters:
      - name: timeID
        in: path
        description: Provide ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 2
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Time_Entries'
      security:
      - basicAuth: []
  /email_configs/{emailID}:
    get:
      tags:
      - Email Configs
      summary: View an Email Config
      description: View an Email Config
      parameters:
      - name: emailID
        in: path
        description: Provide ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 42
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email_Configs'
      security:
      - basicAuth: []
  /email_configs:
    get:
      tags:
      - Email Configs
      summary: List All Email Configs
      description: List All Email Configs
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email_Configs'
      security:
      - basicAuth: []
  /email/mailboxes:
    get:
      tags:
      - Email Mailboxes
      summary: List All Email Mailboxes
      description: List All Email Mailboxes
      responses:
        "200":
          description: OK
      security:
      - basicAuth: []
  /email/mailboxes/{id}:
    delete:
      tags:
      - Email Mailboxes
      summary: Delete an Email Mailboxes
      description: Delete an Email Mailboxes
      parameters:
      - name: id
        in: path
        description: Mailboxes ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 42
      responses:
        "204":
          description: "HTTP Status: 204 No Content"
      security:
      - basicAuth: []
  /email/settings:
    get:
      tags:
      - Email Mailboxes
      summary: View Mailbox Settings
      description: View Mailbox Settings
      responses:
        "200":
          description: OK
      security:
      - basicAuth: []
  /notifications/email/bcc:
    get:
      tags:
      - Email Mailboxes
      summary: View Automatic Bcc emails
      description: View Automatic Bcc emails
      responses:
        "200":
          description: OK
      security:
      - basicAuth: []
  /products/{productID}:
    get:
      tags:
      - Products
      summary: View a Product
      description: |-
        View a Product
        "message": "The Multi Product feature(s) is/are not supported in your plan. Please upgrade your account to use it."
      parameters:
      - name: productID
        in: path
        description: Provide ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 42
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Products'
      security:
      - basicAuth: []
  /products:
    get:
      tags:
      - Products
      summary: List All Products
      description: |-
        List All Products
        "message": "The Multi Product feature(s) is/are not supported in your plan. Please upgrade your account to use it."
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Products'
      security:
      - basicAuth: []
  /business_hours/{businesshoursID}:
    get:
      tags:
      - Business Hours
      summary: View a Business Hour
      description: View a Business Hour
      parameters:
      - name: businesshoursID
        in: path
        description: Provide ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 42
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business_Hours'
      security:
      - basicAuth: []
  /business_hours:
    get:
      tags:
      - Business Hours
      summary: List All Business Hours
      description: List All Business Hours
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business_Hours'
      security:
      - basicAuth: []
  /scenario_automations.json:
    get:
      tags:
      - Scenario Based Automation
      summary: List All Scenario Automations
      description: List All Scenario Automations
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scenario_Automations'
      security:
      - basicAuth: []
  /sla_policies:
    get:
      tags:
      - SLA Policies
      summary: List All SLA Policies
      description: List All SLA Policies
      responses:
        "200":
          description: OK
      security:
      - basicAuth: []
  /automations/{automation_type_id}/rules/{id}:
    delete:
      tags:
      - Automations
      summary: Delete an Automation Rule
      description: Delete an Automation Rule
      parameters:
      - name: automation_type_id
        in: path
        description: Type id of the automation
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 42
      - name: id
        in: path
        description: ID of the automation rule
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
          example: 42
      responses:
        "204":
          description: "HTTP Status: 204 No Content"
      security:
      - basicAuth: []
  /settings/helpdesk:
    get:
      tags:
      - Settings
      summary: Settings are configured through the Admin page of the Freshdesk web
        app.
      description: Settings are configured through the Admin page of the Freshdesk
        web app.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
      security:
      - basicAuth: []
components:
  schemas:
    Tickets:
      type: object
      properties:
        id:
          type: integer
          description: Unique ID of the ticket
          format: int64
          example: 42
        cc_emails:
          type: array
          example:
          - ram@freshdesk.com
          - diana@freshdesk.com
          items:
            type: string
        fwd_emails:
          type: array
          example:
          - ram@freshdesk.com
          - diana@freshdesk.com
          items:
            type: string
        reply_cc_emails:
          type: array
          example:
          - ram@freshdesk.com
          - diana@freshdesk.com
          items:
            type: string
        email_config_id:
          type: integer
          format: int64
        group_id:
          type: integer
          format: int64
        priority:
          type: integer
          format: int64
          example: 1
        requester_id:
          type: integer
          format: int64
          example: 42
        responder_id:
          type: integer
          format: int64
        source:
          type: integer
          format: int64
          example: 2
        status:
          type: integer
          format: int64
          example: 2
        fr_escalated:
          type: boolean
          example: false
        spam:
          type: boolean
          example: false
        urgent:
          type: boolean
          example: false
        is_escalated:
          type: boolean
          example: false
        created_at:
          type: string
          format: datetime
          example: 2017-09-21T14:00:50Z
        updated_at:
          type: string
          format: datetime
          example: 2018-11-30T14:13:11Z
        due_by:
          type: string
          format: datetime
          example: 2018-11-30T14:13:11Z
        fr_due_by:
          type: string
          format: datetime
          example: 2018-11-30T14:13:11Z
        description_text:
          type: string
          example: Some details on the issue ...
        description:
          type: string
          example: <div>Some details on the issue ..</div>
        tags:
          type: array
          items:
            type: string
        attachments:
          type: array
          items:
            type: object
        company_id:
          type: integer
          description: ID of the primary company
          format: int64
          example: 42
        subject:
          type: string
          example: Support needed..
        type:
          type: string
          example: Question
        to_emails:
          type: array
          example:
          - ram@freshdesk.com
          - diana@freshdesk.com
          items:
            type: string
        product_id:
          type: integer
          format: int64
          example: 1
    Account:
      type: object
      properties:
        organisation_id:
          type: integer
          format: int64
          example: 284960733419037820
        organisation_name:
          type: string
          example: dailyplanet.myfreshworks.com
        account_id:
          type: string
          example: "1840509"
        account_name:
          type: string
          example: Daily Planet
        account_domain:
          type: string
          example: dailyplanet.freshdesk.com
        bundle_id:
          type: integer
          format: int64
          example: 42
        hipaa_compliant:
          type: boolean
        total_agents:
          $ref: '#/components/schemas/Account_total_agents'
        timezone:
          type: string
          example: Eastern Time (US & Canada)
        data_center:
          type: string
          example: US
        tier_type:
          type: string
          example: Forest
        address:
          $ref: '#/components/schemas/Account_address'
        contact_person:
          $ref: '#/components/schemas/Account_contact_person'
    Jobs:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 42
        name:
          type: string
          example: ACCOUNT::EXPORT
        status:
          type: string
          example: IN PROGRESS
        created_at:
          type: string
          format: datetime
          example: 2017-09-21T14:00:50Z
        updated_at:
          type: string
          format: datetime
          example: 2018-11-30T14:13:11Z
        status_updated_at:
          type: string
          format: datetime
          example: 2017-09-21T14:00:50Z
        progress:
          type: integer
          format: int64
          example: 80
    Contact:
      type: object
      properties:
        id:
          type: integer
          description: ID of the contact
          format: int64
          example: 42
        active:
          type: boolean
          description: Set to true if the contact has been verified
        address:
          type: string
          description: Address of the contact
          example: "123, Main Street"
        avatar:
          type: object
          description: Avatar of the contact
        company_id:
          type: integer
          description: ID of the primary company to which this contact belongs
          format: int64
          example: 42
        view_all_tickets:
          type: boolean
          description: Set to true if the contact can see all tickets that are associated
            with the company to which he belong
        custom_fields:
          type: array
          description: Key value pair containing the name and value of the custom
            fields.
          items:
            type: string
        deleted:
          type: boolean
          description: Set to true if the contact has been deleted. Note that this
            attribute will only be present for deleted contacts
        description:
          type: string
          description: A short description of the contact
          example: This is a test contact
        email:
          type: string
          description: "Primary email address of the contact. If you want to associate\
            \ additional email(s) with this contact, use the other_emails attribute"
          example: foo@test.com
        job_title:
          type: string
          description: Job title of the contact
          example: Software Engineer
        language:
          type: string
          description: Language of the contact
          example: en
        mobile:
          type: string
          description: Mobile number of the contact
          example: "1234567890"
        name:
          type: string
          description: Name of the contact
          example: Foo Bar
        other_emails:
          type: array
          description: Additional emails associated with the contact
          items:
            type: string
        phone:
          type: string
          description: Telephone number of the contact
          example: "1234567890"
        tags:
          type: array
          description: Tags associated with this contact
          items:
            type: string
        time_zone:
          type: string
          description: Time zone in which the contact resides
          example: Asia/Kolkata
        twitter_id:
          type: string
          description: Twitter handle of the contact
          example: foo
        unique_external_id:
          type: string
          description: External ID of the contact
          example: "1234567890"
        other_companies:
          type: array
          description: Additional companies associated with the contact
          items:
            type: string
        created_at:
          type: string
          description: Contact creation timestamp
          format: datetime
          example: 2016-07-11T04:40:00Z
        updated_at:
          type: string
          description: Contact updated timestamp
          format: datetime
          example: 2016-07-11T04:40:00Z
    Roles:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 42
        name:
          type: string
          example: Account Administrator
        description:
          type: string
          example: "Has complete control over the help desk including access to Account\
            \ or Billing related information, and receives Invoices."
        default:
          type: boolean
        created_at:
          type: string
          description: Roles creation timestamp
          format: datetime
          example: 2016-07-11T04:40:00Z
        updated_at:
          type: string
          description: Roles updated timestamp
          format: datetime
          example: 2016-07-11T04:40:00Z
    Groups:
      type: object
      properties:
        agent_ids:
          type: array
          description: Array of agent user IDs separated by commas. Instructions on
            finding an agent's user ID can be found here.
          items:
            type: integer
            format: int64
        auto_ticket_assign:
          type: integer
          description: Describes the type of automatic ticket assignment set for the
            group. Automatic ticket assignment is only available on certain plans.
          format: int64
        business_hour_id:
          type: integer
          description: Unique ID of the business hour associated with the group
          format: int64
        description:
          type: string
          description: Description of the group
        escalate_to:
          type: integer
          description: "The ID of the user to whom an escalation email is sent if\
            \ a ticket is unassigned. To create/update a group with an escalate_to\
            \ value of 'none', please set the value of this parameter to 'null'"
          format: int64
        id:
          type: integer
          description: Unique ID of the group
          format: int64
        name:
          type: string
          description: Name of the group
        unassigned_for:
          type: string
          description: "The time after which an escalation email is sent if a ticket\
            \ remains unassigned. The accepted values are \"30m\" for 30 minutes,\
            \ \"1h\" for 1 hour, \"2h\" for 2 hours, \"4h\" for 4 hours, \"8h\" for\
            \ 8 hours, \"12h\" for 12 hours, \"1d\" for 1 day, \"2d\" for 2 days,\
            \ and \"3d\" for 3 days"
        created_at:
          type: string
          description: Group creation timestamp
          format: datetime
        updated_at:
          type: string
          description: Group updated timestamp
          format: datetime
    Admin_Groups:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 7653
        name:
          type: string
          example: Entertainment
        description:
          type: string
          example: Singers and dancers
        escalate_to:
          type: integer
          format: int64
        unassigned_for:
          type: string
          example: 30m
        agent_ids:
          type: array
          example:
          - 42
          - 1
          items:
            type: integer
            format: int64
        created_at:
          type: string
          format: datetime
          example: 2015-08-25T07:31:55Z
        updated_at:
          type: string
          format: datetime
          example: 2015-08-25T07:31:55Z
        allow_agents_to_change_availability:
          type: boolean
          example: true
        business_calendar_id:
          type: integer
          format: int64
          example: 1
        automatic_agent_assignment:
          $ref: '#/components/schemas/Admin_Groups_automatic_agent_assignment'
    Time_Entries:
      type: object
      properties:
        billable:
          type: boolean
        note:
          type: string
          example: Invoice Preparation
        timer_running:
          type: boolean
        id:
          type: integer
          format: int64
          example: 42
        agent_id:
          type: integer
          format: int64
          example: 42
        ticket_id:
          type: integer
          format: int64
          example: 42
        time_spent:
          type: integer
          format: int64
        created_at:
          type: string
          format: datetime
          example: 2015-08-25T07:31:55Z
        updated_at:
          type: string
          format: datetime
          example: 2015-08-25T07:31:55Z
        executed_at:
          type: string
          format: datetime
          example: 2015-08-25T07:31:55Z
        start_time:
          type: string
          format: datetime
          example: 2015-08-25T07:31:55Z
    Email_Configs:
      type: object
      properties:
        active:
          type: boolean
          description: Set to true if the email config is verified and activated
        group_id:
          type: integer
          description: Denotes the group ID to which the email is associated
          format: int64
          example: 42
        id:
          type: integer
          description: Unique ID of the email config
          format: int64
          example: 42
        name:
          type: string
          description: Name of the email config
          example: Primary Email
        primary_role:
          type: boolean
          description: "Set to true if the email associated to a product, is the primary\
            \ email"
        product_id:
          type: integer
          description: Denotes the product ID to which the email is associated
          format: int64
          example: 42
        reply_email:
          type: string
          description: Denotes your support email address
          example: support@domain.freshdesk.com
        to_email:
          type: string
          description: Denotes the email address to which your support emails gets
            forwarded
          example: support@domain.freshdesk.com
        created_at:
          type: string
          description: Email Config creation timestamp
          format: datetime
          example: 2016-07-11T04:40:00Z
        updated_at:
          type: string
          description: Email Config updated timestamp
          format: datetime
          example: 2016-07-11T04:40:00Z
    Products:
      type: object
      properties:
        id:
          type: integer
          description: Unique ID of the product
          format: int64
          example: 42
        name:
          type: string
          description: Name of the product
          example: Freshservice
        description:
          type: string
          description: Description of the product
          example: Support for IT
        created_at:
          type: string
          description: Product creation timestamp
          format: datetime
          example: 2015-07-03T09:08:53+05:30
        updated_at:
          type: string
          description: Product updated timestamp
          format: datetime
          example: 2015-07-03T09:08:53+05:30
    Business_Hours:
      type: object
      properties:
        id:
          type: integer
          description: Unique ID of the business hour
          format: int64
          example: 35000006727
        name:
          type: string
          description: Name of the business hour
          example: Default
        description:
          type: string
          description: Description of the business hour
          example: Default Business Calendar
        time_zone:
          type: string
          description: Denotes the time zone of the business hour
          example: Eastern Time (US & Canada)
        is_default:
          type: boolean
          description: Set to true if this is the default business hour
        business_hours:
          $ref: '#/components/schemas/Business_Hours_business_hours'
        created_at:
          type: string
          format: datetime
          example: 2017-09-21T14:00:50Z
        updated_at:
          type: string
          format: datetime
          example: 2018-11-30T14:13:11Z
    Scenario_Automations:
      type: object
      properties:
        id:
          type: integer
          description: ID of the Scenario
          format: int64
          example: 42
        name:
          type: string
          description: Name of the Scenario
          example: default
        description:
          type: string
          description: A short description about the Scenario
          example: Default Business Hour
        actions:
          type: array
          description: Actions to be performed by the Scenario
          items:
            $ref: '#/components/schemas/Scenario_Automations_actions'
        private:
          type: boolean
          description: Boolean value stating whether the Scenario is accessible to
            self or all
        created_at:
          type: string
          description: Scenario Automations creation timestamp
          format: datetime
          example: 2018-08-16T09:08:53+05:30
        updated_at:
          type: string
          description: Scenario Automations updated timestamp
          format: datetime
          example: 2018-08-16T09:08:53+05:30
    Settings:
      type: object
      properties:
        primary_language:
          type: string
          description: Primary language on your subdomain
        supported_languages:
          type: array
          description: Supported language on your subdomain
          items:
            type: string
        portal_languages:
          type: array
          description: Portal language on your subdomain
          items:
            type: string
    groups_body:
      type: object
      properties:
        agent_ids:
          type: array
          description: "Array of agent user ids separated by comma (' , '). Instructions\
            \ on getting the agent's user ID"
          items:
            type: integer
        auto_ticket_assign:
          type: integer
          description: "Describes the automatic ticket assignment type. Will not be\
            \ supported if your Freshdesk account is not on a plan that supports automatic\
            \ ticket assignment. The accepted values are 0 and 1. To set other assignment\
            \ types to a group, use Admin-Groups API. The default value is 0."
          format: int64
          example: 0
        description:
          type: string
          description: Description of the group
          example: Singers and dancers
        escalate_to:
          type: integer
          description: The user to whom the escalation email is sent of a ticket is
            unassigned. To create/update escalate_to with 'none' provide the value
            'null' in the request
          format: int64
        name:
          type: string
          description: Name of the group
          example: Entertainment
        unassigned_for:
          type: string
          description: "The time after which an escalation email will be sent if a\
            \ ticket remains unassigned. The accepted values are \"30m\" for 30 minutes,\
            \ \"1h\" for 1 hour, \"2h\" for 2 hour, \"4h\" for 4 hour, \"8h\" for\
            \ 8 hour, \"12h\" for 12 hour, \"1d\" for 1 day, \"2d\" for 2days, \"\
            3d\" for 3 days. The default value is \"30m\""
          example: 30m
    groups_id_body:
      type: object
      properties:
        agent_ids:
          type: array
          description: "Array of agent user ids separated by comma (' , '). Instructions\
            \ on getting the agent's user ID"
          items:
            type: integer
        auto_ticket_assign:
          type: integer
          description: "Describes the automatic ticket assignment type. Will not be\
            \ supported if your Freshdesk account is not on a plan that supports automatic\
            \ ticket assignment. The accepted values are 0 and 1. To set other assignment\
            \ types to a group, use Admin-Groups API. The default value is 0."
          format: int64
          example: 0
        description:
          type: string
          description: Description of the group
          example: Singers and dancers
        escalate_to:
          type: integer
          description: The user to whom the escalation email is sent of a ticket is
            unassigned. To create/update escalate_to with 'none' provide the value
            'null' in the request
          format: int64
        name:
          type: string
          description: Name of the group
          example: Entertainment
        unassigned_for:
          type: string
          description: "The time after which an escalation email will be sent if a\
            \ ticket remains unassigned. The accepted values are \"30m\" for 30 minutes,\
            \ \"1h\" for 1 hour, \"2h\" for 2 hour, \"4h\" for 4 hour, \"8h\" for\
            \ 8 hour, \"12h\" for 12 hour, \"1d\" for 1 day, \"2d\" for 2days, \"\
            3d\" for 3 days. The default value is \"30m\""
          example: 30m
    ticketID_time_entries_body:
      type: object
      properties:
        agent_id:
          type: string
          description: The agent to whom this time-entry is associated. One agent
            can have only one timer running. Everything else will be stopped if new
            timer is on for an agent
          example: "42"
        billable:
          type: boolean
          description: Set as true if the entry is billable. Default value is true
        executed_at:
          type: string
          description: Time at which this time-entry id added/created
          example: 2015-08-25T07:31:55Z
        note:
          type: string
          description: Description on this time-entry
          example: Invoice Preparation
        start_time:
          type: string
          description: The time at which the time-entry is added or the time of the
            last invoked "start-timer" action using a toggle
          format: datetime
          example: 2015-08-25T07:31:55Z
        time_spent:
          type: string
          description: The number of hours (in hh:mm format). Used to set the total
            time_spent
          example: 10:40
        timer_running:
          type: boolean
          description: Indicates if the timer is running
    time_entries_timeID_body:
      type: object
      properties:
        agent_id:
          type: string
          description: The agent to whom this time-entry is associated. One agent
            can have only one timer running. Everything else will be stopped if new
            timer is on for an agent
          example: "10"
        billable:
          type: boolean
          description: Set as true if the entry is billable. Default value is true
        executed_at:
          type: string
          description: Time at which this time-entry id added/created
          example: 2015-08-25T07:31:55Z
        note:
          type: string
          description: Description on this time-entry
          example: Invoice Preparation
        start_time:
          type: string
          description: The time at which the time-entry is added or the time of the
            last invoked "start-timer" action using a toggle
          format: datetime
          example: 2015-08-25T07:31:55Z
        time_spent:
          type: string
          description: The number of hours (in hh:mm format). Used to set the total
            time_spent
          example: 10:40
        timer_running:
          type: boolean
          description: Indicates if the timer is running
    Account_total_agents:
      type: object
      properties:
        full_time:
          type: integer
          format: int64
          example: 1
        occasional:
          type: integer
          format: int64
          example: 1
        field_service:
          type: integer
          format: int64
          example: 0
        collaborators:
          type: integer
          format: int64
          example: 0
    Account_address:
      type: object
      properties:
        country:
          type: string
          example: USA
        state:
          type: string
          example: California
        city:
          type: string
          example: San Mateo CA
        street:
          type: string
          example: S. Delaware Street
        postalcode:
          type: integer
          format: int64
          example: 94403
    Account_contact_person:
      type: object
      properties:
        firstnam:
          type: string
          example: Clark
        lastname:
          type: string
          example: Kent
        email:
          type: string
          example: clarkkent1@gmail.com
    Admin_Groups_automatic_agent_assignment_assignment_type_settings:
      type: object
      properties:
        capping_limit:
          type: integer
          format: int64
          example: 2
    Admin_Groups_automatic_agent_assignment_settings:
      type: object
      properties:
        channel:
          type: string
          example: ticket
        assignment_type:
          type: string
          example: skill_based_round_robin
        assignment_type_settings:
          $ref: '#/components/schemas/Admin_Groups_automatic_agent_assignment_assignment_type_settings'
    Admin_Groups_automatic_agent_assignment:
      type: object
      properties:
        enabled:
          type: boolean
          example: true
        type:
          type: string
          example: channel_specific
        settings:
          type: array
          items:
            $ref: '#/components/schemas/Admin_Groups_automatic_agent_assignment_settings'
    Business_Hours_business_hours_monday:
      type: object
      properties:
        start_time:
          type: string
          description: "Time in \"hh:mm:ss a\" format ex: \"08:00:00 am\""
          example: 08:00:00 am
        end_time:
          type: string
          example: 11:59:59 pm
      description: Object of 'start_time' and 'end_time'
    Business_Hours_business_hours_tuesday:
      type: object
      properties:
        start_time:
          type: string
          example: 08:00:00 am
        end_time:
          type: string
          example: 11:59:59 pm
      description: Object of 'start_time' and 'end_time'
    Business_Hours_business_hours:
      type: object
      properties:
        monday:
          $ref: '#/components/schemas/Business_Hours_business_hours_monday'
        tuesday:
          $ref: '#/components/schemas/Business_Hours_business_hours_tuesday'
        wednesday:
          $ref: '#/components/schemas/Business_Hours_business_hours_tuesday'
        thursday:
          $ref: '#/components/schemas/Business_Hours_business_hours_tuesday'
        friday:
          $ref: '#/components/schemas/Business_Hours_business_hours_tuesday'
      description: "Collection of start time and end time of days of a week - 'monday',\
        \ 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'"
    Scenario_Automations_actions:
      type: object
      properties:
        name:
          type: string
          example: ticket_type
        value:
          type: string
          example: Problem
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
